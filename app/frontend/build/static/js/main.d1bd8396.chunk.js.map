{"version":3,"sources":["Modal.js","FileTable.js","App.js","index.js"],"names":["Modal","modalClass","this","props","active","react_default","a","createElement","className","onClick","close","children","aria-label","React","Component","FileTable","_this","files","map","file","key","id","width","openFile","path","name","moment","timestamp","format","tags","Object","keys","tag","removeTag","activateModal","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filepath","window","socket","emit","ack","console","log","fileId","setState","modal","objectSpread","state","addTag","closeModal","payload","textField","toggleTag","newClickedTags","Set","clickedTags","has","delete","add","onDragOver","evt","preventDefault","fileModal","onDropped","createFileDialog","updateModalInputValue","target","value","Date","now","_this2","io","on","uniqueId","_this3","allTagsSet","sortedKeys","push","parseInt","_i","_Object$keys","length","sort","b","reverse","allTags","forEach","v","v2","set","c","class","i","toString","fileTags","remove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","size","Fragment","onDrop","tagDict","src_FileTable","src_Modal","onKeyPress","ref","input","focus","type","placeholder","onChange","closeFileModal","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d1bd8396.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        let modalClass = 'modal'\r\n        if (this.props.active) {\r\n            modalClass = 'modal is-active'\r\n        }\r\n        return (\r\n            <div className={modalClass}>\r\n                <div className='modal-background' onClick={this.props.close}></div>\r\n                <div className='modal-content'>\r\n                    {this.props.children}\r\n                </div>\r\n                <button onClick={this.props.close} className=\"modal-close is-large\" aria-label=\"close\"></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nimport 'bulma/css/bulma.css'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\nimport './table.css'\r\n\r\nclass FileTable extends React.Component {\r\n    render() {\r\n        return (\r\n            <table className=\"table is-fullwidth tableFixedHead is-hoverable is-narrow is-striped\">\r\n                <tbody>\r\n                    {this.props.files.map((file) => {\r\n                        return (\r\n                            <tr key={file.id}>\r\n                                <td width='30%' onClick={() => {this.props.openFile(file.path)}}><a>{file.name}</a></td>\r\n                                {/* <td onClick={() => {this.openFile(file.path)}}><a>{file.path}</a></td> */}\r\n                                <td width='25%'>{moment(file.timestamp, 'YYYY-MM-DD HH:mm:ss.SSSSSS').format('MM/DD/YYYY hh:mm a')}</td>\r\n                                <td width='45%'>\r\n                                    {file.tags !== 'loading' && <div className='field is-grouped is-grouped-multiline'>\r\n                                        {Object.keys(file.tags).map((tag) => {\r\n                                            return (\r\n                                                <div key={tag} className='control'>\r\n                                                    <div className='tags are-small has-addons'>\r\n                                                        <span className='tag is-info'>{tag}</span>\r\n                                                        <a onClick={() => { this.props.removeTag(file.id, tag) }} className='tag is-delete'></a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                        <div className='control'>\r\n                                            <div className=\"tags are-small\">\r\n                                                <a className='tag is-small' onClick={() => {this.props.activateModal(file.id)}}>\r\n                                                    <span className=\"icon is-small\">\r\n                                                        <i className=\"fas fa-plus\"></i>\r\n                                                    </span>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n                                    {file.tags === 'loading' && <div className='level'><div className='level-item'>\r\n                                        <progress className=\"progress is-small is-info\"/>\r\n                                    </div></div>}\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n\r\n                {/* moved to end because tags were showing on top of header */}\r\n                <thead>\r\n                    <tr>\r\n                        <th width='30%'>File Name</th>\r\n                        <th width='25%'>Date Added</th>\r\n                        <th width='45%'>Fabels</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default FileTable","import React from 'react';\nimport io from 'socket.io-client'\n\nimport Modal from './Modal'\nimport FileTable from './FileTable'\n\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        let test_files = {\n            0: { 'id': 0, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            1: { 'id': 1, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            2: { 'id': 2, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            3: { 'id': 3, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            4: { 'id': 4, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            5: { 'id': 5, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            6: { 'id': 6, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            7: { 'id': 7, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            8: { 'id': 8, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            9: { 'id': 9, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            10: { 'id': 10, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            11: { 'id': 11, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            12: { 'id': 12, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            13: { 'id': 13, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            14: { 'id': 14, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            15: { 'id': 15, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            16: { 'id': 16, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            17: { 'id': 17, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            18: { 'id': 18, 'tags': 'loading', 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            19: { 'id': 19, 'tags': {'idk': 'idk', 'not lol': 'not lol'}, 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n            20: { 'id': 20, 'tags': {'idk': 'idk', 'lol': 'lol'}, 'timestamp': Date.now(), 'path': 'test/test/test', 'name': 'test' },\n        }\n        this.state = {\n            files: {},\n            modal: {\n                active: false,\n                fileId: -1,\n                textField: ''\n            },\n            fileModal: {\n                active: false\n            },\n            clickedTags: new Set()\n        }\n    }\n\n    componentDidMount() {\n        let socket = io()\n        socket.on('connect', () => {\n            console.log('connected')\n\n            window.socket = socket\n\n            socket.emit('getAllFiles', (files) => {\n                console.log(files)\n                if (files['error'] === 0) {\n                    this.setState({\n                        files: files['payload']\n                    })\n                }\n                socket.on('newFile', (file) => {\n                    let files = {...this.state.files}\n                    file['tags'] = 'loading'\n                    files[file.id] = file\n                    this.setState({\n                        files: files\n                    })\n                })\n\n                socket.on('updateFile', (file) => {\n                    let files = {...this.state.files}\n                    files[file.id] = file\n                    this.setState({\n                        files: files\n                    })\n                })\n\n                socket.on('removeFile', (uniqueId) => {\n                    // should probably notify user in a modal or smthg\n                    if (uniqueId in this.state.files) {\n                        let files = {...this.state.files}\n                        delete files[uniqueId]\n                        this.setState({\n                            files: files\n                        })\n                    } else {\n                        // handle error\n                    }\n                })\n                // socket.on('updateFile', (file) => {\n                //     for\n                // })\n            })\n\n            // socket.emit('retrieveAllFiles', '', (files) => {\n            // console.log(files)\n            // this.setState = ({\n            // 'files': files\n            // })\n            // })\n        })\n    }\n\n    openFile = (filepath) => {\n        if (window.socket) {\n            window.socket.emit('openFile', filepath, (ack) => {\n                console.log(ack)\n            })\n        }\n    }\n\n    activateModal = (fileId) => {\n        this.setState({\n            modal: {...this.state.modal, active: true, fileId: fileId}\n        })\n    }\n\n    addTag = (fileId, tag) => {\n        console.log(fileId)\n        console.log(tag)\n        this.closeModal()\n        if (window.socket) {\n            // let file = {...this.state.files[fileId], tags: [...this.state.files[fileId].tags, tag]}\n            // let files = {...this.state.files}\n            // files[file.id] = file\n            // this.setState({\n            //     files: files\n            // })\n            let file = {...this.state.files[fileId], tags: 'loading'}\n            let files = {...this.state.files}\n            files[file.id] = file\n            this.setState({\n                files: files\n            })\n            window.socket.emit('addTag', fileId, tag, (ack) => {\n                console.log(ack)\n                if (ack.payload) {\n                    files = {...this.state.files}\n                    files[fileId] = ack.payload\n                    this.setState({\n                        files: files\n                    })\n                }\n            })\n        }\n    }\n\n    removeTag = (fileId, tag) => {\n        console.log(fileId)\n        console.log(tag)\n        if (window.socket) {\n            // let file = {...this.state.files[fileId], tags: this.state.files[fileId].tags.filter(e => e !== tag)}\n            // let files = {...this.state.files}\n            // files[file.id] = file\n            // this.setState({\n            //     files: files\n            // })\n            let file = {...this.state.files[fileId], tags: 'loading'}\n            let files = {...this.state.files}\n            files[file.id] = file\n            this.setState({\n                files: files\n            })\n            window.socket.emit('removeTag', fileId, tag, (ack) => {\n                console.log(ack)\n                if (ack.payload) {\n                    files = {...this.state.files}\n                    files[fileId] = ack.payload\n                    this.setState({\n                        files: files\n                    })\n                }\n            })\n        }\n    }\n\n    closeModal = () => {\n        this.setState({\n            modal: {\n                ...this.state.modal,\n                active: false,\n                textField: '',\n                fileId: -1\n            }\n        })\n    }\n\n    toggleTag = (tag) => {\n        let newClickedTags = new Set(this.state.clickedTags)\n        if (newClickedTags.has(tag)) {\n            newClickedTags.delete(tag)\n        } else {\n            newClickedTags.add(tag)\n        }\n\n        this.setState({\n            clickedTags: newClickedTags\n        })\n    }\n\n    onDragOver = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            fileModal: {...this.state.fileModal, active: true}\n        })\n        // console.log(evt)\n    }\n\n    onDropped = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            fileModal: {...this.state.fileModal, active: false}\n        })\n        // console.log(evt.dataTransfer.files)\n        // console.log(evt.dataTransfer.items[0].webkitGetAsEntry())\n        if (window.socket) {\n            window.socket.emit('openFileDialog', (ack) => {\n                console.log(ack)\n            })\n        }\n    }\n\n    createFileDialog = () => {\n        if (window.socket) {\n            window.socket.emit('openFileDialog', (ack) => {\n                console.log(ack)\n            })\n        }\n    }\n\n    // updateFile = (file) => {\n\n    // }\n\n    render() {\n        let allTagsSet = new Set()\n\n        let sortedKeys = []\n        for (let key in this.state.files) {\n            sortedKeys.push(parseInt(key))\n\n            let tags = this.state.files[key].tags\n            if (tags !== 'loading') {\n                for (let tag of Object.keys(tags)) {\n                    allTagsSet.add(tag)\n                }\n            }\n        }\n        sortedKeys.sort(function(a, b){return a-b})\n        sortedKeys = sortedKeys.reverse()\n\n        let allTags = []\n        allTagsSet.forEach((v, v2, set) => {\n            let c = 'is-white'\n            if (this.state.clickedTags.has(v)) {\n                c = 'is-dark'\n            }\n            allTags.push({\n                tag: v,\n                class: c\n            })\n        })\n\n        let files = []\n        for (let i = 0; i < sortedKeys.length; i++) {\n            let key = sortedKeys[i]\n            key = key.toString()\n\n            let file = this.state.files[key]\n            let fileTags = file['tags']\n            let remove = false\n            if (fileTags !== 'loading') {\n                for (let tag of this.state.clickedTags) {\n                    // not all clicked tags in this file\n                    if (!(tag in fileTags)) {\n                        remove = true\n                        break\n                    }\n                }\n            } else if (this.state.clickedTags.size !== 0) {\n                continue\n            }\n\n            if (remove) {\n                continue\n            }\n            files.push(file)\n        }\n\n        return (\n            <>\n                <div className='container is-fluid' onDrop={this.onDropped} onDragOver={this.onDragOver}>\n                    {/* <table className=\"table is-fullwidth\" style={tableFixedHeadStyle}> */}\n                    <section className='hero is-primary is-bold'>\n                        <div className='hero-body'>\n                            <div className='container'>\n                                <nav className='level'>\n                                    <div className='level-left'>\n                                        {allTags.length > 0 && <h1 className='title'>Filter by Fabels:</h1>}\n                                        {allTags.length === 0 && <h1 className='title'>Fabel</h1>}\n                                    </div>\n                                    <div className='level-right'>\n                                        <div className='level-item'>\n                                            <a class=\"button is-rounded\" onClick={this.createFileDialog}>\n                                                <span className='icon'>\n                                                    <i class=\"fas fa-plus\"></i>\n                                                </span>\n                                                <span>Add Files</span>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </nav>\n                                <div className='control'>\n                                    <div className='tags are-small'>\n                                        {allTags.map(tagDict => {\n                                            return (\n                                                <a key={tagDict.tag} onClick={() => { this.toggleTag(tagDict.tag) }} className={tagDict.class + ' tag'}>{tagDict.tag}</a>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <div className='box'>\n                        {files.length > 0 && \n                            <FileTable files={files} activateModal={this.activateModal} removeTag={this.removeTag} openFile={this.openFile} />\n                        }\n                        {files.length === 0 &&\n                            <article class=\"message\">\n                                <div class=\"message-header\">\n                                    Looks like there aren't any files here.\n                                </div>\n                                {this.state.clickedTags.size === 0 && <div class=\"message-body\">\n                                    You can add some by clicking Add Files on the top right or just download something from Chrome!\n                                </div>}\n                                {this.state.clickedTags.size > 0 && <div class=\"message-body\">\n                                    No files match your selected fabels :(\n                                </div>}\n                            </article>\n                        }\n                    </div>\n                </div>\n                <Modal active={this.state.modal.active} close={this.closeModal}>\n                    <div className='container is-fluid has-text-centered'>\n                        <div className=\"field has-addons\">\n                            <div className=\"control is-expanded\">\n                                <input onKeyPress={(evt) => {evt.key === 'Enter' && this.addTag(this.state.modal.fileId, this.state.modal.textField)}} ref={input => input && input.focus()} className=\"input is-focused\" type=\"text\" placeholder=\"New Tag\" value={this.state.modal.textField} onChange={evt => this.updateModalInputValue(evt)} />\n                            </div>\n                            <div className=\"control\">\n                                <a className=\"button is-info\" onClick={() => {this.addTag(this.state.modal.fileId, this.state.modal.textField)}}>\n                                    Add\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n                <div onDragOver={this.onDragOver} onDrop={this.onDropped}>\n                <Modal active={this.state.fileModal.active} close={this.closeFileModal}>\n                    <div className='container is-fluid has-text-centered'>\n                        <p>Drop files here.</p>\n                    </div>\n                </Modal>\n                </div>\n            </>\n        )\n    }\n\n    updateModalInputValue = (evt) => {\n        this.setState({\n            modal: {...this.state.modal, textField: evt.target.value}\n        })\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}